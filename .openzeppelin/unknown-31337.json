{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0xac2c1e21283e749750f738bab3e2f1d7d3b51db3eb1d28bad4d32212cfb0a735",
      "kind": "uups"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0x14396579cff67f8f425660ebc937a2ddb99a517a8a9297e06edc50a33035a777",
      "kind": "uups"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x13ab5f8dbca3fbadbd1693e6479f89424caaeffaeb551cadec000b5107ddd212",
      "kind": "uups"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x7d4091a0d5693c228dcf02ecb1d0f2957bd20364fc5b4d13d4d948dde0983b3c",
      "kind": "uups"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0xba89e14a5b38c296dfbadb92ed38b79eabb865f3cce164634f6669c6b49b3145",
      "kind": "uups"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x9ebed8fbd8483273d3fb42955c950a3c3a7b9b8d533f8d9d9caa7673f26e47b2",
      "kind": "uups"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xf3090e25b405df35b2a3d7675e407fa7fb248e7800f52d5966f258896123e3cd",
      "kind": "uups"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x1437a4fc61eb46eb2e20d3c12b0a8f806eee7c6c02ba2f0f895a90a59bacc472",
      "kind": "uups"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x09d87c5820310923a1f9f058d160c4f27f2bdd9a2ee27cfa13e480ddc5e91518",
      "kind": "uups"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x085c17a3aa95da1c55c9aa359bf79d5b5ee55114868c372a055b06bdd47a24d8",
      "kind": "uups"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x3a666f0f9769e0b3a985b89b43f3ce4a69e923632e6d7295b3cb9906d6a52593",
      "kind": "uups"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0x3cd69f239c9e50d2b83a15cc068316151524ecb625f52c2a1757b1f2f2cf3705",
      "kind": "uups"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0xb37b0022f00f5e446b3fe50a47908bdad2c1cb6fbd4c66c2611e9951e0596138",
      "kind": "uups"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0xdc7eb7017304fc8c749d5be4888ad4093f27d293b3a2a074c58bf3b871480093",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xb72b193c47a71b5196fecdbcf3a2ca552fa041d5a5178c55f6f4f940d9da42fb",
      "kind": "uups"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x2031517a6623f7c1b147e854c2d58f7da7d118e2a6cabb86d21b4a9fb4c3b289",
      "kind": "uups"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x032ea1b4ad9a536d0db57b70264fc507c0f53884c26dce888567744f19844f12",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x30bebd310e013828808d1ce13a0e17d97e330f67f8f5f233f9a1132d79d21f5b",
      "kind": "uups"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0xb950f926a66b9da82bef501e5e109ba0349d9b58fbd0fa306989dfd142ecac82",
      "kind": "uups"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0x92cffa12cbe4ebfd75ffac8f5bd2de9a6ff5e1e9098b798788b5ca7df4db55b7",
      "kind": "uups"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x41a96c84058a6f361f4f6e8d4d236b49e31a8b3bc74b80e5e68b116dad5fa7c7",
      "kind": "uups"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0xa91eb881bc15933c15cdb236c2a88bc2bf36cd6ba5d968bac2a380449fc58167",
      "kind": "uups"
    }
  ],
  "impls": {
    "5b556c2a52ef5af1c199ee8ecedc626e20828f4d28fc0b8a7696901a91f75354": {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x0656e42b6e8d4fc37d9cfcf6bdbc5ecb04c1142ce68b0697f4a5df96c7f108e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "firo",
            "type": "t_contract(FiroToken)3510",
            "src": "contracts/MasterChefUpgradeable.sol:68"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:71"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "firoPerBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:73"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)4679",
            "src": "contracts/MasterChefUpgradeable.sol:75"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)4709_storage)dyn_storage",
            "src": "contracts/MasterChefUpgradeable.sol:77"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4697_storage))",
            "src": "contracts/MasterChefUpgradeable.sol:79"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:81"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:83"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "vesting",
            "type": "t_contract(Vesting)7124",
            "src": "contracts/MasterChefUpgradeable.sol:85"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "locking",
            "type": "t_contract(Locking)6581",
            "src": "contracts/MasterChefUpgradeable.sol:87"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "lockingDuration",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:89"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "vestingDuration",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:91"
          }
        ],
        "types": {
          "t_contract(FiroToken)3510": {
            "label": "contract FiroToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)4679": {
            "label": "contract IMigratorChef"
          },
          "t_array(t_struct(PoolInfo)4709_storage)dyn_storage": {
            "label": "struct MasterChefUpgradeable.PoolInfo[]"
          },
          "t_struct(PoolInfo)4709_storage": {
            "label": "struct MasterChefUpgradeable.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20Upgradeable)767"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accFiroPerShare",
                "type": "t_uint256"
              },
              {
                "label": "isEmergency",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)767": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4697_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterChefUpgradeable.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)4697_storage)": {
            "label": "mapping(address => struct MasterChefUpgradeable.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)4697_storage": {
            "label": "struct MasterChefUpgradeable.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(Vesting)7124": {
            "label": "contract Vesting"
          },
          "t_contract(Locking)6581": {
            "label": "contract Locking"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce51eb9b60385c35994a6c9bd2cf82eb6fd0d233f6ac1270656c9cc48ba63b83": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x07be113ba024aa67210edfd75b2a52f4b2bb8b235065dd54ccb9a766ac1c47b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterChef",
            "label": "firo",
            "type": "t_contract(FiroToken)3510",
            "src": "contracts/MasterChef.sol:68"
          },
          {
            "contract": "MasterChef",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChef.sol:71"
          },
          {
            "contract": "MasterChef",
            "label": "firoPerBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChef.sol:73"
          },
          {
            "contract": "MasterChef",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)3531",
            "src": "contracts/MasterChef.sol:75"
          },
          {
            "contract": "MasterChef",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)3561_storage)dyn_storage",
            "src": "contracts/MasterChef.sol:77"
          },
          {
            "contract": "MasterChef",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3549_storage))",
            "src": "contracts/MasterChef.sol:79"
          },
          {
            "contract": "MasterChef",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/MasterChef.sol:81"
          },
          {
            "contract": "MasterChef",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChef.sol:83"
          },
          {
            "contract": "MasterChef",
            "label": "vesting",
            "type": "t_contract(Vesting)7128",
            "src": "contracts/MasterChef.sol:85"
          },
          {
            "contract": "MasterChef",
            "label": "locking",
            "type": "t_contract(Locking)6585",
            "src": "contracts/MasterChef.sol:87"
          },
          {
            "contract": "MasterChef",
            "label": "lockingDuration",
            "type": "t_uint256",
            "src": "contracts/MasterChef.sol:89"
          },
          {
            "contract": "MasterChef",
            "label": "vestingDuration",
            "type": "t_uint256",
            "src": "contracts/MasterChef.sol:91"
          }
        ],
        "types": {
          "t_contract(FiroToken)3510": {
            "label": "contract FiroToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)3531": {
            "label": "contract IMigratorChef"
          },
          "t_array(t_struct(PoolInfo)3561_storage)dyn_storage": {
            "label": "struct MasterChef.PoolInfo[]"
          },
          "t_struct(PoolInfo)3561_storage": {
            "label": "struct MasterChef.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20Upgradeable)767"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accFiroPerShare",
                "type": "t_uint256"
              },
              {
                "label": "isEmergency",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)767": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)3549_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterChef.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3549_storage)": {
            "label": "mapping(address => struct MasterChef.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)3549_storage": {
            "label": "struct MasterChef.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(Vesting)7128": {
            "label": "contract Vesting"
          },
          "t_contract(Locking)6585": {
            "label": "contract Locking"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a2d66c3b668d3297c2f3eb3ba9671c249683a30b41e3a2b07801cd8a5ba1d5c2": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x500dd33143f017640cce08e5d8cd2e88afeb571bb5a929bdab469e39a95f33b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "firo",
            "type": "t_contract(FiroToken)3510",
            "src": "contracts/MasterChefUpgradeable.sol:68"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:71"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "firoPerBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:73"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "migrator",
            "type": "t_contract(IMigratorChef)4670",
            "src": "contracts/MasterChefUpgradeable.sol:75"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)4700_storage)dyn_storage",
            "src": "contracts/MasterChefUpgradeable.sol:77"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4688_storage))",
            "src": "contracts/MasterChefUpgradeable.sol:79"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:81"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:83"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "vesting",
            "type": "t_contract(Vesting)7128",
            "src": "contracts/MasterChefUpgradeable.sol:85"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "locking",
            "type": "t_contract(Locking)6585",
            "src": "contracts/MasterChefUpgradeable.sol:87"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "lockingDuration",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:89"
          },
          {
            "contract": "MasterChefUpgradeable",
            "label": "vestingDuration",
            "type": "t_uint256",
            "src": "contracts/MasterChefUpgradeable.sol:91"
          }
        ],
        "types": {
          "t_contract(FiroToken)3510": {
            "label": "contract FiroToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorChef)4670": {
            "label": "contract IMigratorChef"
          },
          "t_array(t_struct(PoolInfo)4700_storage)dyn_storage": {
            "label": "struct MasterChefUpgradeable.PoolInfo[]"
          },
          "t_struct(PoolInfo)4700_storage": {
            "label": "struct MasterChefUpgradeable.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(IERC20Upgradeable)767"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accFiroPerShare",
                "type": "t_uint256"
              },
              {
                "label": "isEmergency",
                "type": "t_bool"
              }
            ]
          },
          "t_contract(IERC20Upgradeable)767": {
            "label": "contract IERC20Upgradeable"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)4688_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MasterChefUpgradeable.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)4688_storage)": {
            "label": "mapping(address => struct MasterChefUpgradeable.UserInfo)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserInfo)4688_storage": {
            "label": "struct MasterChefUpgradeable.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(Vesting)7128": {
            "label": "contract Vesting"
          },
          "t_contract(Locking)6585": {
            "label": "contract Locking"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
